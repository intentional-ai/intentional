name: Release on PyPI

on:
  push:
    tags:
    - "*/v[0-9]+.[0-9]+.[0-9]+"  # package-name/v0.0.1
    - "*/v[0-9]+.[0-9]+.[0-9]+rc[0-9]+"  # package-name/v0.0.1rc0

env:
  HATCH_INDEX_USER: __token__
  HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}

jobs:

  publish:
    runs-on: ubuntu-latest
    environment: PyPI Publisher
    permissions:
      id-token: write
    outputs:
      name: ${{ steps.parse_tag.outputs.name }}
      path: ${{ steps.parse_tag.outputs.path }}
      version: ${{ steps.parse_tag.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Parse the tag name
        id: parse_tag
        run: |
          echo "Tag: ${GITHUB_REF#refs/tags/}"
          IFS='/' read -r -a parts <<< "${GITHUB_REF#refs/tags/}"

          echo "Package name: ${parts[0]}"
          echo "name=${parts[0]}" >> $GITHUB_OUTPUT

          echo "Package version: ${parts[1]}"
          echo "version=${parts[1]}" >> $GITHUB_OUTPUT

          # If the package name is not intentional or intentional-core, prefix the path with plugins/
          if [ "${parts[0]}" != "intentional" ] && [ "${parts[0]}" != "intentional-core" ]; then
            echo "Package path: plugins/${parts[0]}/"
            echo "path=plugins/${parts[0]}/" >> $GITHUB_OUTPUT
          else
            echo "Package path: ${parts[0]}/"
            echo "path=${parts[0]}"/ >> $GITHUB_OUTPUT
          fi

      - name: "Print package name and version"
        run: |
          echo "Package name: ${{ steps.parse_tag.outputs.name }}"
          echo "Package path: ${{ steps.parse_tag.outputs.path }}"
          echo "Package version: ${{ steps.parse_tag.outputs.version }}"

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install uv
          uv pip install --system hatch ${{ steps.parse_tag.outputs.path }}

      - name: Build wheel
        run: |
          cd ${{ steps.parse_tag.outputs.package_path }}
          hatch version "${{ steps.parse_tag.outputs.version }}"
          hatch build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ${{ steps.parse_tag.outputs.path }}/dist/
